# Configuration options for the eReuse Workbench.
#
# Please see the included comments for the description of each option and its
# legal and default values.


# Global options.
[DEFAULT]
# The kind of equipment that you are going to register.  Legal values are:
#
#   - Desktop: assume desktop computer
#   - Laptop: assume laptop
#   - Netbook: assume netbook
#   - Server: assume server
#   - Microtower: assume small format desktop computer
#   - no: do not ask
#
# Other values cause the value to be asked interactively.
#
# Default: (none)
#EQUIP =
EQUIP = no

# Whether to ask for a PID for the device.  Legal values are:
#
#   - yes: ask for PID
#   - no: do not ask
#
# Default: no
PID = no

# Whether to ask for an _ID for the device.  Legal values are:
#
#   - yes: ask for _ID
#   - no: do not ask
#
# Default: no
_ID = no

# Whether to ask for a string to enumerate or identify the device that you are
# registering.  Legal values are:
#
#   - yes: ask for label
#   - no: do not ask
#
# Default: yes
#LABEL = yes
LABEL = no

# Whether to ask for a text that describes if the device has some component in
# bad state or to send some message to the receiver.  Legal values are:
#
#   - yes: ask for comment
#   - no: do not ask
#
# Default: yes
#COMMENT = yes
COMMENT = no

# The aesthetic condition of the devices that you are going to register.
# Legal values are:
#
#   - A: Brand new device
#   - B: Used, but no remarkable aesthetic defects
#   - C: Light aesthetic defects (scratches, dents, decoloration)
#   - D: Serious aesthetic defects (cracked covers, broken parts)
#
# Other values cause the value to be asked interactively.
#
# Default: (none)
#VISUAL_GRADE =
VISUAL_GRADE = no

# The working condition of the devices that you are going to register.  Legal
# values are:
#
#   - A: Brand new device
#   - B: Used, but no remarkable functional defects
#   - C: Light functional defects (soft noises, dead pixels, erased key labels)
#   - D: Serious functional defects (loud noises, annoying audio/video artifacts, missing keys)
#
# Other values cause the value to be asked interactively.
#
# Default: (none)
#FUNCTIONAL_GRADE =
FUNCTIONAL_GRADE = no

# Whether to copy the inventory file (JSON) to a USB drive when the process is
# finished (it will wait until a new USB is detected).  Legal values are:
#
#   - yes: try to copy to USB drive when finished
#   - no: do not try
#
# Default: yes
#COPY_TO_USB = yes
COPY_TO_USB = no

# Whether to send the inventory file (JSON) to an [eReuse PXE server][] when
# the process is finished.  Legal values are:
#
#   - yes: send to server when finished
#   - no: do not send
#
# [eReuse PXE server]: (https://github.com/eReuse/workbench/blob/master/docs/PXE_Register.md)
#
# Default: yes
SENDTOSERVER = yes

# The kind of SMART test to be run on hard drives.  Legal values are:
#
#   - none: do not perform a SMART test
#   - short: perform a quick SMART test (minutes)
#   - long:  perform a thorough SMART test (tens of minutes)
#
# Default: short
#SMART = short
SMART = none

# Length in minutes of the CPU and memory stress test.  A value of 0 disables
# the test completely.
#
# Default: 0
STRESS = 0

# Option used to push json fragments to a flask server
# 
# Use a complete URL: http://server-ip:port/path
# No push if (none)
#
# Default: (none)
#FLASK = 
#FLASK = http://192.168.2.2:5000/inventories/post_phase
FLASK =

# You can push json fragments to a celery queue
#
# BROKER indicates the broker complete uri
#
# Since we use redis as broker:
BROKER = redis://192.168.2.2:6379/0

# The name of the queue
QUEUE = worker.consume_phase

# Whether to add a full log of hardware to the inventory file (JSON) for a
# better debugging.  Legal values are:
#
#   - yes: add full information
#   - no: do not add full information
#
# Default: no
DEBUG = no


# Options for the erasure process.
[eraser]
# Whether to erase hard disks.  Legal values are:
#
#   - ask: ask the user whether to erase or not
#   - yes: do an erase without asking (wait 10 seconds before start)
#   - no: do not erase and do not ask to
#
# Default: ask
#ERASE = ask
ERASE = no

# The kind of erasure to perform on hard drives.  Legal values are:
#
#   - EraseBasic: fast "bit per bit" erasure
#   - EraseSectors:  more secure erase with a validation of every sector erased
#
# Default: EraseBasic
MODE = EraseBasic

# How many erasure iterations to perform on hard drives.  A single iteration
# on a 300 GB disk takes 1 hour and 30 minutes approximately.
#
# Default: 1
STEPS = 1

# Whether to add a final overwrite pass with zeros to hide shredding.  Legal
# values are:
#
#   - yes: do a final overwrite with zeros
#   - no: do not
#
# Default: no
ZEROS = no


# Options controlling the digital signature of inventory files.
[signature]
# Whether to sign the inventory file (JSON) to avoid modifications.  The
# device will generate two versions, one signed and another unsigned.  If the
# ``COPY_TO_USB`` option is enabled, only the signed version will be copied to
# the USB drive.
#
#   - yes: sign the inventory file
#   - no: do not sign
#
# Default: no
SIGN_OUTPUT = no


# Options controlling the system image installation process.
[installer]

# Whether to install a system image.  Legal values are:
#
#   - ask: ask the user whether to install or not
#   - yes: install without asking for confirmation
#   - no: do not install and do not ask to
#
# Default: ask
#INSTALL = ask
INSTALL = no

# Absolute directory where system images are found.
#
# Default: /media/workbench-data/images
IMAGE_DIR = /media/workbench-data/images

# Name of the system image to be installed when the process is finished.  It
# shall not contain file extensions.
#
# An empty value causes the image to be selected interactively.
#
# Default: (none)
IMAGE_NAME =


# Options not used for the Workbench itself but for related tools.
[tools]
# The keyboard layout to be loaded by ``erwb-keyboard-layout`` before
# performing the inventory process.  It should be one of the entries in
# ``/usr/share/X11/xkb/symbols`` (e.g. ``us`` for American English, ``es`` for
# Spanish, ``fr`` for French, ``de`` for German, and so on).
#
# The default keyboard layout depends on system configuration.  An empty value
# causes the layout to be asked interactively.
#
# Default: (none, ask)
KEYBOARD_LAYOUT = es
